data(state)
statedata = cbind(data.frame(state.x77), state.abb, state.area, state.center, state.division, state.name, state.region)
str(statedata)
plot(statedata$x, statedata$y)
tapply(statedata$HS.Grad, statedata$state.region)
tapply(statedata$state.region, statedata$HS.Grad)
table(statedata$HS.Grad, statedata$state.region)
boxplot(statedata$Murder, statedata$state.region)
boxplot(statedata$Murder ~ statedata$state.region)
table(statedata$HS.Grad, statedata$state.region == "Northeast")
subset(statedata, statedata$state.region == "Northeast")
View(statedata)
LifeExp = lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area, data = statedata)
summary(LifeExp)
plot(statedata$Income, statedata$Life.Exp)
LifeExp1 = lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost, data = statedata)
summary(LifeExp1)
LifeExp2 = lm(Life.Exp ~ Population + Income + Murder + HS.Grad + Frost, data = statedata)
summary(LifeExp2)
LifeExp3 = lm(Life.Exp ~ Population + Murder + HS.Grad + Frost, data = statedata)
summary(LifeExp3)
sort(predict(Life.exp))
sort(predict(Life.exp), data=statedata)
sort(predict(statedata$Life.exp), data=statedata)
sort(predict(statedata$Life.exp, data=statedata))
predict(statedata$Life.exp, data=statedata)
predict(LifeExp3, data=statedata)
sort(predict(LifeExp3, data=statedata))
which.min(statedata)
(statedata$Life.Exp)
table(statedata$Life.Exp, statedata$state.name)
table(statedata$state.name ,statedata$Life.Exp)
table(statedata$state.name ,statedata$Life.Exp, mean())
table(statedata$state.name ,statedata$Life.Exp, mean
table(statedata$state.name ,statedata$Life.Exp, mean)
which.min(statedata$Life.Exp)
statedata[40]
statedata$state.name[40]
which.max(statedata$Life.Exp)
statedata$state.name[11]
LifeExp3$residuals
sort(LifeExp3$residuals)
setwd("C:/SourceCode/Learn/Analytics/R/Unit 2/Assignments/DETECTING FLU")
load("C:/SourceCode/Learn/Analytics/R/Unit 2/Assignments/DETECTING FLU/.RData")
FluTest
str(FluTest)
summary(FluTest)
PredTest1 = exp(predict(FluTrend1, newdata=FluTest))
FluTest$Week
?which
which(week == "2012-03-11")
which( FluTest$Week == "2012-03-11")
PredTest1[11]
FluTest[11]
FluTest[11,]
(FluTest[11,]$ILI - PredTest1[11])/FluTest[11,]$ILI
View(FluTest)
View(FluTrain)
summary(LifeExp3)
summary(FluTrend1)
SSE = sum((PredTest1 - log(FluTest$ILI))
SSE = sum((PredTest1 - log(FluTest$ILI)^2)
SSE = sum((PredTest1 - log(FluTest$ILI))^2)
SST = sum((PredTest1 - mean(log(FluTrain$ILI)))^2)
1 - SSE/SST
RMSE = sqrt(SSE/nrow(FluTest))
RMSE
SST = sum((PredTest1 - mean(FluTrain$ILI))^2)
RMSE = sqrt(SSE/nrow(FluTest))
RMSE
install.packages("zoo")
library(zoo)
ILILag2 = lag(zoo(FluTrain$ILI), -2, na.pad = TRUE)
FluTrain$ILILag2 = coredata(ILILag2)
plot(log(FluTrain$ILILag2),log(FluTrain$ILI))
FluTrend2 = lm(log(ILI) ~ Queries+log(ILILag2), data = FluTrain)
summary(FluTrend2)
summary(FluTrend1)
ILILag2 = lag(zoo(FluTest$ILI), -2, na.pad = TRUE)
FluTest$ILILag2 = coredata(ILILag2)
FluTest
View(FluTest)
FluTest$ILILag2[1] = FluTrain$ILI[416]
FluTest$ILILag2[2] = FluTrain$ILI[417]
PredTest2 = exp(predict(FluTrend2, newdata=FluTest))
SSE = sum((FluTest$ILI - PredTest2)^2)
RMSE = sqrt(SSE/nrow(FluTest))
RMSE
