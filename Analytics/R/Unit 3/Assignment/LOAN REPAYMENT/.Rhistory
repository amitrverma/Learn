Parole <- read.csv("parole.csv")
setwd("C:/SourceCode/Learn/Analytics/R/Unit 3/Assignment/PAROLE VIOLATORS")
Parole <- read.csv("parole.csv")
table(Parole$violator)
pisaTrain$raceeth = relevel(pisaTrain$raceeth, "White")
Parole$state
Parole$stateVirginia = relevel(Parole$stateVirginia, "Virginia")
Parole$stateVirginia = relevel(Parole$stateVirginia, "state")
Parole$stateVirginia = relevel(Parole$state, "Virginia")
Parole$state = relevel(Parole$state, "Virginia")
Parole$stateVirginia = relevel(Parole$stateVirginia, "4")
Parole$stateVirginia = relevel(Parole$stateVirginia, ref= 4)
summary(Parole$state)
str(Parole$state)
str(Parole)
as.factor(Parole$state)
as.factor(Parole$crime)
str(Parole)
summary(Parole)
Parole$crime = as.factor(Parole$crime)
Parole$state = as.factor(Parole$state)
summary(Parole)
str(Parole)
set.seed(144)
library(caTools)
split = sample.split(Parole$violator, SplitRatio = 0.7)
train = subset(Parole, split = TRUE)
test = subset(Parole, split = FALSE)
test = subset(Parole, split == FALSE)
train = subset(Parole, split == TRUE)
202/675
trainLog = glm(violaot ~., data = train, family = binomial)
trainLog = glm(violator ~., data = train, family = binomial)
sum(trainLog)
summary(trainLog)
e^1.6
ln(5.01)
setwd("C:/SourceCode/Learn/Analytics/R/Unit 3/Assignment/LOAN REPAYMENT")
loans = read.csv("loans.csv")
str(loans)
summary(loans)
summary(loans$not.fully.paid)
table(loans$not.fully.paid)
1533/9578
loans = read.csv("loans_imputed.csv")
set.seed(144)
library(caTools)
set.seed(144)
split = sample.split(loans$not.fully.paid, SplitRatio = 0.7)
loansTrain = subset(loans, split == TRUE)
loansTest = subset(loans, split == FALSE)
?glm
trainLog = glm(not.fully.paid ~ ., data = loansTrain, family = binomial)
summary(trainLog)
-9.317e-03*-10
?predict
predicted.risk = predict(trainLog, newdata = loansTest, type = "response")
loansTest$predicted.risk = predicted.risk
table(loansTest$not.fully.paid, predicted.risk > 0.5)
(2403)/2873
table(loansTest$not.fully.paid, loansTrain$not.fully.paid > 0.5)
table(loansTest$not.fully.paid, loansTrain$not.fully.paid)
table(loansTest$not.fully.paid, loansTrain)
tapply(loansTest$not.fully.paid, loansTrain$not.fully.paid)
tapply(loansTest$not.fully.paid, loansTrain$not.fully.paid, mean)
table(loansTrain$not.fully.paid)
5632/6705
library(ROCR)
predictTest = predict(loansTest, trainLog)
predictTest = predict(trainLog, loansTest)
ROCRPred = prediction(predictTest, loansTest$not.fully.paid)
auc = as.numeric(performance(ROCRPred, "auc")@y.values)
auc
trainLog1 = glm(not.fully.paid ~ int.rate, data = loansTrain, family = binomial)
summary(trainLog1)
predictTest1 = predict(loansTest, trainLog1)
predictTest1 = predict(trainLog1 , loansTest)
sort(predictTest1)
predict(trainLog1, newdata = loansTest, type="response")
sort(predict(trainLog1, newdata = loansTest, type="response"))
predictTest1 = predict(trainLog1, newdata = loansTest, type="response")
table(loansTest$not.fully.paid, predictTest1 > 0.5)
460/2873
460/2873
summary(predictTest1)
ROCRPred1 = prediction(predictTest1, loansTest$not.fully.paid)
auc1 = as.numeric(performance(ROCRPred1, "auc")@y.values)
auc1
loansTest$profit = exp(loansTest$int.rate*3)-1
loansTest$profit[loansTest$not.fully.paid] = -1
sort(loansTest$profit)
highInterest = subset(loansTest, loansTest$int.rate >= 0.15)
summary(highInterest$profit)
table(highInterest$not.fully.paid)
110/437
predictTestHigh = predict(trainLog1, newdata = highInterest, type="response")
sort(predictTestHigh)
highInterest$lowRisk = sort(predictTestHigh)
highInterest$profit[1:100]
mean(highInterest$profit[1:100])
mean(highInterest$profit)
summary(highInterest$profit)
cutoff = sort(highInterest$predicted.risk, decreasing=FALSE)[100]
