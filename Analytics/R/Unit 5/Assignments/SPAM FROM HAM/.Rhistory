setwd("C:/SourceCode/Learn/Analytics/R/Unit 5/Assignments/SPAM FROM HAM")
emails = read.csv("emails.csv", stringsAsFactors = FALSE)
library(caTools)
library(rpart)
library(rpart.plot)
library(tm)
library(ROCR)
corpus = Corpus(VectorSource(emails$text))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords , stopwords("english"))
corpus = tm_map(corpus, stemDocument)
dtm = DocumentTermMatrix(corpus)
spdtm = removeSparseTerms(dtm, 0.95)
emailsSparse = as.data.frame(as.matrix(spdtm))
colnames(emailsSparse) = make.names(colnames(emailsSparse))
emailsSparse$spam = emails$spam
emailsSparse$spam = as.factor(emailsSparse$spam)
set.seed(123)
split = sample.split(emailsSparse$spam, SplitRatio = 0.7)
train = subset(emailsSparse, split == TRUE)
test = subset(emailsSparse, split == FALSE)
spamLog = glm(spam~., data=train, family="binomial")
spamCART = rpart(spam~., data=train, method="class")
set.seed(123)
spamRF = randomForest(spam~., data=train)
library(randomForest)
set.seed(123)
spamRF = randomForest(spam~., data=train)
predictCART = predict(spamCART, type = "class")
table(train$spam, predictCART)
(2885+894)/nrow(train)
library(ROCR)
cartROCR = prediction(predictCART, train$spam)
cartROCR = prediction(spamCART, train$spam)
predictRF = predict(spamRF, type = "class")
table(train$spam, predictRF)
(3013+918)/ nrow(train)
predTestLog = predict(spamLog, newdata = test, type="response")
table(test$spam, predTestLog > 0.5)
(1257+376)/nrow(test)
logROCR = prediction(predTestLog, test$spam)
logauc = as.numeric(performance(logROCR,"auc")@y.values)
logauc
table(test$spam, predictCART)
predictTestCART = predict(spamCART, newdata = test, type = "class")
table(test$spam , predictTestCART)
(1228+386)/nrow(test)
testROCR = prediction(predictTestCART, test$spam)
predictTestRF = predict(spamRF, newdata = test, type = "class")
table(test$spam , predictTestRF)
(1290+386)/nrow(test)
load("C:/SourceCode/Learn/Analytics/R/Unit 5/Assignments/SPAM FROM HAM/.RData")
