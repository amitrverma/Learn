trials = read.csv("clinical_trial.csv", stringsAsFactors = FALSE)
library(caTools)
library(tm)
library(rpart)
library(rpart.plot)
corpuTitle = Corpus(VectorSource(trials$title))
corpusTitle = Corpus(VectorSource(trials$title))
remove(corpuTitle)
corpusTitle = tm_map(corpusTitle, tolower)
corpusTitle = tm_map(corpusTitle, PlainTextDocument)
corpusTitle = tm_map(corpusTitle, removePunctuation)
corpusTitle = tm_map(corpusTitle, removeWords, stopwords("english"))
corpusTitle = tm_map(corpusTitle, stemDocument)
dtmTitle = DocumentTermMatrix(corpusTitle)
dtmTitle = removeSparseTerms(dtmTitle)
dtmTitle = removeSparseTerms(dtmTitle, 0.95)
dtmTitle = as.data.frame(as.matrix(dtmTitle))
corpusAbstract = Corpus(VectorSource(trials$abstract))
corpusAbstract = tm_map(corpusAbstract, tolower)
corpusAbstract = tm_map(Corpus, PlainTextDocument)
corpusAbstract = tm_map(corpusAbstract , PlainTextDocument)
corpusAbstract = tm_map(corpusAbstract, removePunctuation)
corpusAbstract = tm_map(corpusAbstract, removeWords, stopwords("english"))
corpusAbstract = tm_map(corpusAbstract, stemDocument)
dtmAbstract = DocumentTermMatrix(corpusAbstract)
dtmAbstract = removeSparseTerms(dtmAbstract, 0.95)
dtmAbstract = as.data.frame(as.matrix(dtmAbstract))
colnames(dtmTitle) = paste0("T", colnames(dtmTitle))
colnames(dtmAbstract) = paste0("A", colnames(dtmAbstract))
dtm = cbind(dtmTitle, dtmAbstract)
dtm = cbind(dtmTitle, dtmAbstract)
dtm$trial = trials$trial
set.seed(144)
split = sample.split(dtm$trial, 0.7)
train = subset(dtm, split == TRUE)
test = subset(dtm, split == FALSE)
trialCART = rpart(trial ~ ., data = train, method = "class")
predictTrialCART = predict(trialCART)
predictTrialCART.prop = predictTrialCART[,2]
max(predictTrialCART.prop)
table(trials$trial, predictTrialCART.prop>0.5)
table(trials$trial, predictTrialCART.prop)
table(trials$trial, predictTrialCART)
table(train$trial, predictTrialCART.prop>0.5)
(631+441)/nrow(train)
131/(131+441)
99/(99+631)
441/(441+131)
631/(99+631)
predictTest = predict(trialCART, newdata = test, method = "class")
predictTest.prob = predictTest[,2]
table(test$trial, predictTest.prob > 0.5)
(261+162)/nrow(test)
library(ROCR)
predictionTest = prediction(test$trial, predictTrialCART.prop)
predictionTest = prediction(predictTest, test$trial)
predictionTest = prediction(predictTest.prob, test$trial)
auc = as.numeric(performance(predictionTest, "auc")@y.values)
auc
