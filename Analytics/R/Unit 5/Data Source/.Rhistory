ls()
name <- "amit"
name
ls()
table <- read.csv("C:/Users/p10007954/Downloads/table.csv")
View(table)
setwd("C:/SourceCode/Learn/Analytics/R/Unit 5/Data Source")
tweets = read.csv("tweets.csv")
View(tweets)
tweets = read.csv("tweets.csv", stringsAsFactors = FALSE)
str(tweets)
tweets$Negative = as.factor(tweets$Avg <= -1)
table(tweets$Negative)
install.packages("tm")
library(tm)
library(tm)
install.packages("SnowballC")
library(SnowballC)
Corpus = Corpus(VectorSource(tweets$Tweet))
Corpus = tm_map(Corpus, tolower)
Corpus[[1]]
corpus = tm_map(corpus, PlainTextDocument)
Corpus = tm_map(Corpus, PlainTextDocument)
Corpus[[1]]
Corpus = tm_map(Corpus, removePunctuation)
Corpus[[1]]
stopwords("english")[1:10]
Corpus = tm_map(Corpus, removeWords, c("apple", stopwords("english")))
Corpus[[1]]
Corpus = tm_map(Corpus, stemDocument)
Corpus[[1]]
frequencies = DocumentTermMatrix(Corpus)
frequencies
sparse = removeSparseTerms(frequencies, 0.995)
sparse
tweetsSparse = as.data.frame(as.matrix(sparse))
colnames(tweetsSparse) = make.names(colnames(tweetsSparse))
tweetsSparse
str(tweetsSparse)
tweetsSparse$Negative = tweets$Negative
library(caTools)
set.seed(123)
split = sample.split(tweetsSparse$Negative , SplitRatio = 0.7)
trainSparse = subset(tweetsSparse, split == TRUE)
testSparse = subset(tweetsSparse$Negative == FALSE)
testSparse = subset(tweetsSparse$Negative, split == FALSE)
testSparse = subset(tweetsSparse, split == FALSE)
View(tweetsSparse)
View(testSparse)
findFreqTerms(Corpus, lowfreq = 20)
library(rpart)
library(rpart.plot)
View(tweets)
tweetCART = rpart(Negative ~ ., data = trainSparse, method = "class")
prp(tweetCART)
predictCART = predict(tweetCART, newdata = testSparse, type = "class")
table(testSparse$Negative, predictCART)
library(randomForest)
set.seed(123)
tweetRF = randomForest(Negative ~ ., data = trainSparse)
predictRF = predict(tweetRF, newdata = testSparse)
tweetLog = glm(Negative ~ ., data = trainSparse, method = "binomial")
tweetLog = glm(Negative ~ ., data = trainSparse, type = "binomial")
tweetLog = glm(Negative ~ ., data = trainSparse, family = "binomial")
predictLog = predict(tweetLog, newdata = testSparse)
predictLog = predict(tweetLog, newdata = testSparse, type = "response")
table(testSparse$Negative, predictLog > 0.5)
(245+34)/ nrow(testSparse)
Corpus[[1]]$content
